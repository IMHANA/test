<%@page import="java.util.HashMap"%>
<%@page import="java.util.Map"%>
<%@page import="com.bc.mybatis.DAO"%>
<%@page import="com.bc.mybatis.Paging"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%-- 현재 페이지에 표시할 데이터를 화면에 표시 
	1. 페이징 처리를 위한 객체(Paging) 생성해서 필요한 데이터 참조
	2. 페이징 객체에 설정할 데이터를 저장
	3. DB 데이터 조회 (건수확인)
	4. 현재 페이지에 표시할 데이터 조회
		4-1. 전달받은 페이지 번호 활용
		4-2. 전체 페이지 개수, 블록갯수 확인
		4-3. 현재 블록의 시작페이지, 끝페이지 확인
		4-4. 현재 페이지의 begin, end
	5. 데이터 화면에 표시(스타일 적용해서)
--%>
<%
	//페이징 처리를 위한 Paging 객체 생성해서 값을 읽고 설정
	Paging p = new Paging();

	//1. 전체 게시물의 수를 구하기
	/* int totalCount = DAO.getTotalCount();
	System.out.println("> totalCount : " + totalCount); */
	
	p.setTotalRecord(DAO.getTotalCount());
	p.setTotalPage();
	/* System.out.println("> totalCount : " + p.getTotalRecord()); */
	System.out.println("> 전체게시글 수 : " + p.getTotalRecord());
	System.out.println("> 전체페이지 수 : " + p.getTotalPage());
	
	//2. 현재 페이지 구하기
	String cPage = request.getParameter("cPage");
	if (cPage != null) { 
		// null인 경우 파라미터 값이 없다는 뜻, 
		// null이 아닌경우 페이지를 클릭해서 페이지(파라미터) 값이 있다는 뜻
		p.setNowPage(Integer.parseInt(cPage));
	}
	
	//3. 현재 페이지에 표시할 게시글 시작번호(begin) 끝번호(end) 구하기
	p.setEnd(p.getNowPage() * p.getNumPerPage());	//현재페이지번호 * 페이지당 글 수 
	p.setBegin(p.getEnd() - p.getNumPerPage() + 1);
	
	// (선택적) 3-1. 끝 글번호가 데이터 건수보다 많은경우 데이터 건수와 일치시키는 작업
	if (p.getEnd() > p.getTotalRecord()) {
		p.setEnd(p.getTotalRecord());
	}
	System.out.println("------------------------");
	System.out.println(">> 현재페이지(Now) : " + p.getNowPage());
	System.out.println(">> 시작글번호(Begin) : " + p.getBegin());
	System.out.println(">> 끝 글번호(End) : " + p.getEnd());
	
	//-----블록(block) 계산하기 --------------
	// 4. 블록의 시작페이지, 끝페이지 구하기 (현재 페이지 번호 사용)
	// 시작페이지 구하기
	int nowPage = p.getNowPage();
	int beginPage = (nowPage - 1) / p.getPagePerBlock() * p.getPagePerBlock() + 1;
	p.setBeginPage(beginPage);
	p.setEndPage(p.getBeginPage() + p.getPagePerBlock() - 1);
	
	// 4-1. 끝페이지(endPage)가 전체 페이지수(totalPage)보다 크면
	// 끝페이지 값을 전체 페이지수로 변경처리
	if (p.getEnd() > p.getTotalPage()) {
		p.setEndPage(p.getTotalPage());
	}
	
	// 끝페이지 구하기
	System.out.println(">>시작페이지(beginPage) : " + p.getBeginPage());
	System.out.println(">>끝페이지(endPage) : " + p.getEndPage());
	
	//===========================================================
	// 현재 페이지 기준으로 DB데이터(게시글) 가져오기
	// 시작글번호, 끝 글번호 저장용 Map 만들기 (전달할 파라미터 저장용)
	Map<String, Integer> map = new HashMap<>();
	map.put("begin", p.getBegin());
	map.put("end", p.getEnd());
	
	
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>BBS</title>
<style>
	#bbs table {
		width: 580px;
		margin-left: 10px;
		border-collapse: collapse;
		font-size: 14px;
	}
	#bbs table caption {
		font-size: 20px;
		font-weight: bold;
		margin-bottom: 10px;
	}
	#bbs table th, #bbs table td {
		text-align: center;
		border: 1px solid black;
		padding: 4px 10px;
	}
	#bbs .align-left { text-align: left; }
	
	.title { background-color: lightsteelblue; }
	
	.no { width: 10%; }
	.writer { width: 15%; }
	.regdate { width: 20%; }
	.hit { width: 15%; }
	
	/***** 페이지 표시 부분 스타일(시작) ****/
	.paging { list-style: none; }
	.paging li {
		float: left;
		margin-right: 8px;
	}
	.paging li a {
		text-decoration: none;
		display: block;
		padding: 3px 7px;
		border: 1px solid #00B3DC;
		font-weight: bold;
		color: black;
	}
	.paging .disable {
		border: 1px solid silver;
		padding: 3px 7px;
		color: silver;
	}
	.paging .now {
		border: 1px solid #ff4aa5;
		padding: 3px 7px;
		background-color: #ff4aa5;
	}
	.paging li a:hover {
		background-color: #00B3DC;
		color: white;
	}
	/***** 페이지 표시 부분 스타일(끝) ****/
</style>
</head>
<body>

<div id="bbs">
<table>
	<caption>게시글 목록</caption>
	<thead>
		<tr class="title">
			<th class="no">번호</th>
			<th class="subject">제목</th>
			<th class="writer">글쓴이</th>
			<th class="regdate">작성일자</th>
			<th class="hit">조회수</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>10</td>
			<td>테스트10</td>
			<td>테스터</td>
			<td>2021-02-02</td>
			<td>0</td>
		</tr>
	</tbody>
	<tfoot>
		<tr>
			<td colspan="4">
				<ol class="paging">
					<li class="disable">이전으로</li>
					<li class="now">1</li>
					<li>
						<a>2</a>
					</li>
					<li>
						<a>3</a>
					</li>
					<li>
						<a>다음으로</a>
					</li>
				</ol>
			</td>
			<td>
				<input type="button" value="글쓰기">
			</td>
		</tr>
	</tfoot>
</table>

</div>

</body>
</html>












